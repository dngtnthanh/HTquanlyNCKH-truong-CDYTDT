
@{
    Layout = null;
}

<!DOCTYPE html>
@model HTquanlyNCKH.Models.Scientist
@using HTquanlyNCKH.Models
@using (Html.BeginForm("ScientistStoreOrEdit", "Scientist", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(model => model.scientistID)
    @Html.HiddenFor(model => model.sctCreateDate)
    @Html.HiddenFor(model => model.sctModifierDate)

    @Html.HiddenFor(model => model.sctCreateUser)
    @Html.HiddenFor(model => model.sctModifierUser)
    @Html.HiddenFor(model => model.sctBirthday)
    @Html.HiddenFor(model => model.sctImage)



    <div class="form-group" style="float: left; margin: 2px">
        @Html.LabelFor(model => model.sctFirstName, "Họ và tên đệm", new { @class = "control-label" })
        @Html.EditorFor(model => model.sctFirstName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.sctFirstName)
    </div>

    <div class="form-group" style="float: left; margin: 2px">
        @Html.LabelFor(model => model.sctLastName, "Tên", new { @class = "control-label" })
        @Html.EditorFor(model => model.sctLastName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.sctLastName)
    </div>
    <div class="form-group" style="float: left">
        <table>
            <tr>
                <td style="vertical-align:sub">
                    <b>Giới tính:</b>
                </td>
                @if (Model.sctSex == "Nam")
                {
                    <td style="vertical-align:sub">
                        <p>Nam</p>
                    </td>
                    <td style="vertical-align:sub">
                        <input type="radio" checked name="gioi-tinh" value="Nam" />
                    </td>

                    <td style="vertical-align:sub">
                        <p>Nữ</p>
                    </td>
                    <td style="vertical-align:sub">
                        <input type="radio" name="gioi-tinh" value="Nữ" />
                    </td>
                }
                else if (Model.sctSex == "Nữ")
                {
                    <td style="vertical-align:sub">
                        <p>Nam</p>
                    </td>
                    <td style="vertical-align:sub">
                        <input type="radio" name="gioi-tinh" value="Nam" />
                    </td>
                    <td style="vertical-align:sub">
                        <p>Nữ</p>
                    </td>
                    <td style="vertical-align:sub">
                        <input checked type="radio" name="gioi-tinh" value="Nữ" />
                    </td>
                }
                else
                {
                    <td style="vertical-align:sub">
                        <p>Nam</p>
                    </td>
                    <td style="vertical-align:sub">
                        <input type="radio" name="gioi-tinh" value="Nam" />
                    </td>
                    <td style="vertical-align:sub">
                        <p>Nữ</p>
                    </td>
                    <td style="vertical-align:sub">
                        <input type="radio" name="gioi-tinh" value="Nữ" />
                    </td>
                }
            </tr>
        </table>
        @Html.ValidationMessageFor(model => model.sctSex)
    </div>

    <div class="form-group" style="padding-left: 40px ;float: left; margin: 2px">
        @Html.LabelFor(model => model.sctBirthday, "Ngày sinh", new { @class = "control-label" })
        <input type="date" name="ngay-sinh" value="@ViewBag.ngaysinh" />
    </div>
    <div class="form-group" style="clear: both;float: left; margin: 2px">
        @Html.LabelFor(model => model.sctAddress, "Địa chỉ", new { @class = "control-label" })
        @Html.EditorFor(model => model.sctAddress, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.sctAddress)
    </div>

    <div class="form-group" style="float: left; margin: 2px">
        @Html.LabelFor(model => model.sctEmail, "Email", new { @class = "control-label" })
        @Html.EditorFor(model => model.sctEmail, new { htmlAttributes = new { @class = "form-control", @type = "email" } })
        @Html.ValidationMessageFor(model => model.sctEmail)
    </div>
    <div class="form-group" style="float: left; margin: 2px">
        @Html.LabelFor(model => model.sctPhone, "Số điện thoại", new { @class = "control-label" })
        @Html.EditorFor(model => model.sctPhone, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
        @Html.ValidationMessageFor(model => model.sctPhone)
    </div>

    <div class="form-group" style="float: left;  margin: 2px">
        @Html.LabelFor(model => model.sctResult, "Kết quả thực hiện", new { @class = "control-label" })
        @Html.EditorFor(model => model.sctResult, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.sctResult)
    </div>
    @*<div class="dropdown" style="clear: both; float: left;  margin: 2px">
            <div class="form-group">
                <label>Nơi sinh(*)</label>
                @Html.DropDownList("placeID", new SelectList(ViewBag.plaList, "placeID", "plaName"), "--Không để trống--", new { @class = "form-control" })
            </div>
        </div>*@

    <div class="form-group" style="width: 220px; float: left; margin: 2px">
        <label id="noiSinhText">
            Nơi sinh(*):
        </label>
        <select onchange="changeNull()" id="noiSinh" name="noiSinh" data-placeholder="Nơi sinh" class="chosen-select">
            @{
                using (DBModel db = new DBModel())
                {
                    var pla = db.Places.OrderBy(n => n.placeID);

                    <option value="@Model.PlaceID" selected="selected">@ViewBag.placeName</option>
                    foreach (var item in pla)
                    {

                        <option value="@item.placeID">@item.plaName</option>
                    }

                }
            }
        </select>
    </div>

    @*<div class="dropdown" style="float: left; margin: 2px">
            <div class="form-group">
                <label>Trình độ(*)</label>
                @Html.DropDownList("degreeID", new SelectList(ViewBag.degList, "degreeID", "degName"), "--Không để trống--", new { @class = "form-control" })
            </div>
        </div>*@

    <div class="form-group" style="width: 200px; float: left; margin: 2px">
        <label id="trinhDoText">
            Trình độ(*):
        </label>
        <select id="trinhDo" onchange="changeNull()" name="trinhDo" data-placeholder="Trình độ" class="chosen-select">
            @{
                using (DBModel db = new DBModel())
                {
                    var deg = db.Degrees.OrderBy(n => n.degreeID);

                    <option value="@Model.degreeID" selected="selected">@ViewBag.degreeName</option>
                    foreach (var item in deg)
                    {
                        <option value="@item.degreeID">@item.degName</option>
                    }
                }
            }
        </select>
    </div>

    @*<div class="dropdown" style="float: left ; margin: 2px">
            <div class="form-group">
                <label>Phòng ban(*)</label>
                @Html.DropDownList("unitID", new SelectList(ViewBag.unitList, "unitID", "untName"), "--Không để trống--", new { @class = "form-control" })
            </div>
        </div>*@

    <div class="form-group" style="width: 200px; float: left; margin: 2px">
        <label id="phongBanText">
            Phòng ban(*):
        </label>
        <select id="phongBan" onchange="changeNull()" name="phongBan" data-placeholder="Phòng ban" class="chosen-select">
            @{
                using (DBModel db = new DBModel())
                {
                    var uni = db.Units.OrderBy(n => n.unitID);

                    <option value="@Model.unitID" selected="selected">@ViewBag.unitName</option>
                    foreach (var item in uni)
                    {
                        <option value="@item.unitID">@item.untName</option>
                    }
                }
            }
        </select>
    </div>

    @*<div class="dropdown" style="float: left ; margin: 2px">
            <div class="form-group">
                <label>Chuyên ngành(*)</label>
                @Html.DropDownList("fieldID", new SelectList(ViewBag.fieldList, "fieldID", "fieName"), "--Không để trống--", new { @class = "form-control" })
            </div>
        </div>*@

    <div class="form-group" style="width: 200px; float: left; margin: 2px">
        <label id="chuyenNganhText">
            Chuyên nghành(*):
        </label>
        <select id="chuyenNganh" onchange="changeNull()" name="chuyenNganh" data-placeholder="Chuyên ngành" class="chosen-select">
            @{
                using (DBModel db = new DBModel())
                {
                    var fie = db.Fields.OrderBy(n => n.fieldID);

                    <option value="@Model.fieldID" selected="selected">@ViewBag.fieldName</option>
                    foreach (var item in fie)
                    {
                        <option value="@item.fieldID">@item.fieName</option>
                    }
                }
            }
        </select>
    </div>

    @*<div class="dropdown" style="float: left; margin: 2px">
        <div class="form-group">
            <label>Chức vụ(*)</label>
            @Html.DropDownList("foreignID", new SelectList(ViewBag.foreignList, "foreignID", "fgnName"), "--Không để trống--", new { @class = "form-control" })
        </div>
    </div>*@

    <div class="form-group" style="width: 200px; float: left; margin: 2px">
        <label id="chucVuText">
            Chức vụ(*):
        </label>
        <select id="chucVu" onchange="changeNull()" name="chucVu" data-placeholder="Chức vụ" class="chosen-select">
            @{
                using (DBModel db = new DBModel())
                {
                    var forei = db.Foreigns.OrderBy(n => n.foreignID);

                    <option value="@Model.foreignID" selected="selected">@ViewBag.foreignName</option>
                    foreach (var item in forei)
                    {
                        <option value="@item.foreignID">@item.fgnName</option>
                    }
                }
            }
        </select>
    </div>

    <div class="form-group" style="clear: both; margin: 2px">
        @Html.LabelFor(model => model.sctWorkingProcess, "Quá trình làm việc", new { @class = "control-label" })
        @Html.EditorFor(model => model.sctWorkingProcess, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.sctWorkingProcess)
    </div>
    <div class="dropdown" style="float: left">
        <label>Ảnh chân dung</label>
        @if (Model.sctImage == null)
        {
            <img src="~/Uploads/image/avatar/unname.png" width="100" height="100" style="margin: 2px" />
        }
        else
        {
            <img src="~/Uploads/image/avatar/@Model.sctImage" width="100" height="100" style="margin: 2px" />
        }
        <div class="editor-field">
            @Html.TextBoxFor(model => model.sctImage, new { type = "file" })
            @Html.ValidationMessageFor(model => model.sctImage)
        </div>
    </div>
    <div class="form-group" style="float: left; margin: 100px">

        <input id="submit" onclick="checkNull()" value="Lưu lại" class="btn btn-success " />
        <input type="reset" value="Làm mới" class="btn btn-warning" />
    </div>
}


<script>
    $(".chosen-select").chosen({
        allow_single_deselect: true,
        width: '50%',
        no_results_text: "Không tìm thấy kết quả :"
    });

    function checkNull() {
        var noiSinh = document.getElementById('noiSinh');
        var trinhDo = document.getElementById('trinhDo');
        var phongBan = document.getElementById('phongBan');
        var chuyenNganh = document.getElementById('chuyenNganh');
        var chucVu = document.getElementById('chucVu');

        var noiSinhText = document.getElementById("noiSinhText");
        var trinhDoText = document.getElementById("trinhDoText");
        var phongBanText = document.getElementById("phongBanText");
        var chuyenNganhText = document.getElementById("chuyenNganhText");
        var chucVuText = document.getElementById("chucVuText");

        var mes = '';
        if (noiSinh.value == ''
            || trinhDo.value == ''
            || phongBan.value == ''
            || chuyenNganh.value == ''
            || chucVu.value == '')
        {
            mes += 'Không được bỏ trống ';
            if (noiSinh.value == '') { noiSinhText.setAttribute("style", "color: red"); mes += "nơi sinh, " }
            else { noiSinhText.setAttribute("style", "color: #000") }

            if (trinhDo.value == '') { trinhDoText.setAttribute("style", "color: red"); mes += "trình độ, " }
            else { trinhDoText.setAttribute("style", "color: #000") }

            if (phongBan.value == '') { phongBanText.setAttribute("style", "color: red"); mes += "phòng ban, " }
            else { phongBanText.setAttribute("style", "color: #000") }

            if (chuyenNganh.value == '') { chuyenNganhText.setAttribute("style", "color: red"); mes += "chuyên ngành, " }
            else { chuyenNganhText.setAttribute("style", "color: #000") }

            if (chucVu.value == '') { chucVuText.setAttribute("style", "color: red"); mes += "chức vụ." }
            else (chucVuText.setAttribute("style", "color: #000"))
            alert(mes)  //In ra thong bao nhap thieu
        }
        else
        {
            var submit = document.getElementById('submit');
            submit.setAttribute("type", "submit");
            submit.onclick();
        }
    }

    function changeNull() {


        var noiSinh = document.getElementById('noiSinh');
        var trinhDo = document.getElementById('trinhDo');
        var phongBan = document.getElementById('phongBan');
        var chuyenNganh = document.getElementById('chuyenNganh');
        var chucVu = document.getElementById('chucVu');

        var noiSinhText = document.getElementById("noiSinhText");
        var trinhDoText = document.getElementById("trinhDoText");
        var phongBanText = document.getElementById("phongBanText");
        var chuyenNganhText = document.getElementById("chuyenNganhText");
        var chucVuText = document.getElementById("chucVuText");

        

            if (noiSinh.value == '') { noiSinhText.setAttribute("style", "color: red") }
            else { noiSinhText.setAttribute("style", "color: #000") }

            if (trinhDo.value == '') { trinhDoText.setAttribute("style", "color: red") }
            else { trinhDoText.setAttribute("style", "color: #000") }

            if (phongBan.value == '') { phongBanText.setAttribute("style", "color: red") }
            else { phongBanText.setAttribute("style", "color: #000") }

            if (chuyenNganh.value == '') { chuyenNganhText.setAttribute("style", "color: red") }
            else { chuyenNganhText.setAttribute("style", "color: #000") }

            if (chucVu.value == '') { chucVuText.setAttribute("style", "color: red") }
            else (chucVuText.setAttribute("style", "color: #000"))
        

    }

</script>
<style type='text/css'>
    label {
        font-size: 14px;
    }

    b {
        font-size: 14px;
    }

    input {
        font-size: 10px;
    }

    table {
        counter-reset: none;
        counter-reset: none; /*mặc định số thứ tự bắt đầu*/
    }

        table tr {
            counter-increment: none;
        }

            table tr td:first-child::before {
                content: none;
                min-width: auto;
                margin-right: 0.5em;
            }

        table td {
            vertical-align: middle;
        }
</style>
