@{
    Layout = null;
}

<!DOCTYPE html>
@model HTquanlyNCKH.Models.Topic

@using HTquanlyNCKH.Models
@using (Html.BeginForm("TopicStoreOrEdit", "Topic", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(model => model.topicID)

    @Html.HiddenFor(model => model.tpcCreateData)
    @Html.HiddenFor(model => model.tpcModifierData)

    @Html.HiddenFor(model => model.tpcCreateUser)
    @Html.HiddenFor(model => model.tpcModifierUser)

    @Html.HiddenFor(model => model.tpcStartDate)
    @Html.HiddenFor(model => model.tpcEndDate)
    @Html.HiddenFor(model => model.tpcDateOfAcceptance)
    @Html.HiddenFor(model => model.tpcProofFile)

    <div class="form-group" style="float: left; margin: 2px">
        @Html.LabelFor(model => model.tpcName, "Tên đề tài", new { @class = "control-label" })
        @Html.EditorFor(model => model.tpcName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.tpcName)
    </div>
    <div class="form-group" style="float: left; margin: 2px">
        @Html.LabelFor(model => model.tpcYear, "Năm thực hiện", new { @class = "control-label" })
        @Html.EditorFor(model => model.tpcYear, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = 1990, @max = 2100 } })
        @Html.ValidationMessageFor(model => model.tpcYear)
    </div>
    <div class="form-group" style="float: left; margin: 2px">
        @Html.LabelFor(model => model.tpcCode, "Mã số công khai", new { @class = "control-label" })
        @Html.EditorFor(model => model.tpcCode, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
        @Html.ValidationMessageFor(model => model.tpcCode)
    </div>

    <div class="form-group" style="float: left; margin: 2px">
        @Html.LabelFor(model => model.tpcReviewBoard, "Hội đồng xét duyệt", new { @class = "control-label" })
        @Html.EditorFor(model => model.tpcReviewBoard, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.tpcReviewBoard)
    </div>
    <div class="form-group" style="float: left; margin: 2px">
        @Html.LabelFor(model => model.tpcAcceptance, "Hội đồng nghiệm thu", new { @class = "control-label" })
        @Html.EditorFor(model => model.tpcAcceptance, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.tpcAcceptance)
    </div>
    @*<div class="dropdown" style="float: left ; margin: 2px">
            <div class="form-group">
                <label>Nhà khoa học</label>
                @Html.DropDownList("scientistID", new SelectList(ViewBag.sct, "scientistID", "sctFullName"), "Select", new { @class = "chosen - select" })
            </div>
        </div>*@
    <div class="form-group" style="width: 400px; float: left; margin: 2px">
        <label>
            Nhà khoa học:
        </label>
        <select id="nhaKhoaHoc" name="nhakhoahoc" data-placeholder="Người thực hiện" class="chosen-select">
            @{
                using (DBModel db = new DBModel())
                {
                    var sct = db.Scientists.OrderBy(n => n.scientistID);

                    <option value="@Model.scientistID" selected="selected">@ViewBag.tenNhaKhoaHoc</option>
                    foreach (var item in sct)
                    {
                        var fullName = item.sctFirstName + " " + item.sctLastName + " - KH" + item.scientistID;
                        <option value="@item.scientistID">@fullName</option>
                    }

                }
            }
        </select>
    </div>
    <div class="form-group" style="clear: both;float: left; margin: 2px">
        <label>Ngày bắt đầu</label>
        <input type="date" name="ngay-bat-dau" value="@ViewBag.ngaybatdau" />
        @Html.ValidationMessageFor(model => model.tpcEndDate)
    </div>
    <div class="form-group" style="float: left; margin: 2px">
        <label>Ngày kết thúc</label>
        <input type="date" name="ngay-ket-thuc" value="@ViewBag.ngayketthuc" />
        @Html.ValidationMessageFor(model => model.tpcEndDate)
    </div>
    <div class="form-group" style="float: left; margin: 2px">
        <label>Ngày nghiệm thu</label>
        <input type="date" name="ngay-nghiem-thu" value="@ViewBag.ngaynghiemthu" />
        @Html.ValidationMessageFor(model => model.tpcDateOfAcceptance)
    </div>


    @*<div class="dropdown" style="float: left; clear: both">
            <div class="form-group">
                <label>Lĩnh Vực: </label>
                @Html.DropDownList("fieldID", new SelectList(ViewBag.fie, "fieldID", "fieName", "Select"), new { @class = "form-control" })
            </div>
        </div>*@

    <div class="form-group" style="width: 300px; float: left; margin: 2px">
        <label>
            Lĩnh vực:
        </label>
        <select id="linhVuc" name="linhVuc" data-placeholder="Lĩnh vực" class="chosen-select">
            @{
                using (DBModel db = new DBModel())
                {
                    var fie = db.Fields.OrderBy(n => n.fieldID);

                    <option value="@Model.fieldID" selected="selected">@ViewBag.fieldName</option>
                    foreach (var item in fie)
                    {

                        <option value="@item.fieldID">@item.fieName</option>
                    }

                }
            }
        </select>
    </div>

    <div class="form-group" style="width: 300px; float: left; margin: 2px">
        <label>
            Xếp loại:
        </label>
        <select id="xepLoai" name="xepLoai" data-placeholder="Xếp loại" class="chosen-select">
            @{
                using (DBModel db = new DBModel())
                {
                    var classifi = db.Classifications.OrderBy(n => n.classifiID);

                    <option value="@Model.fieldID" selected="selected">@ViewBag.classifiName</option>
                    foreach (var item in classifi)
                    {

                        <option value="@item.classifiID">@item.clsName</option>
                    }

                }
            }
        </select>
    </div>

    @*<div class="form-group" style="float: left; margin: 2px">
            <label>Xếp loại: </label>
            @Html.DropDownList("classifiID", new SelectList(ViewBag.cls, "classifiID", "clsName", "Select"), new { @class = "form-control" })
        </div>*@
    @*<div class="form-group" style="float: left; margin: 2px">
        <label>Trạng thái: </label>
        @Html.DropDownList("statusID", new SelectList(ViewBag.sts, "statusID", "stsName", "Select"), new { @class = "form-control" })
    </div>*@

    <div class="form-group" style="width: 300px; float: left; margin: 2px">
        <label>
            Trạng thái:
        </label>
        <select id="trangThai" name="trangThai" data-placeholder="Trạng thái" class="chosen-select">
            @{
                using (DBModel db = new DBModel())
                {
                    var status = db.Status.OrderBy(n => n.statusID);

                    <option value="@Model.statusID" selected="selected">@ViewBag.statusName</option>
                    foreach (var item in status)
                    {

                        <option value="@item.statusID">@item.stsName</option>
                    }

                }
            }
        </select>
    </div>

    <div class="editor-field" style="float: left; margin: 2px">
        <label>File đính kèm</label>
        @Html.TextBoxFor(model => model.tpcProofFile, new { type = "file" })
        @Html.ValidationMessageFor(model => model.tpcProofFile)
    </div>


    <div class="form-group" style="clear: both; margin: 2px">
        @Html.LabelFor(model => model.tpcSummary, "Tóm lượt đề tài", new { @class = "control-label" })
        @Html.EditorFor(model => model.tpcSummary, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.tpcSummary)
    </div>
    <div class="form-group" style="padding-top: 20px">
        <input id="submit" onclick="checkNull()" @*type="submit"*@ value="Lưu lại" class="btn btn-success " />
        <input type="reset" value="Làm mới" class="btn btn-warning" />
    </div>



    <script>
        $(".chosen-select").chosen({
            allow_single_deselect: true,
            width: '50%',
            no_results_text: "Không tìm thấy kết quả :"
        });

        function checkNull() {
            var nhaKhoaHoc = document.getElementById('nhaKhoaHoc').value;
            var linhVuc = document.getElementById('linhVuc').value;
            var xepLoai = document.getElementById('xepLoai').value;
            var trangThai = document.getElementById('trangThai').value;

            var mes = '';
            if (nhaKhoaHoc == '' || linhVuc == '' || xepLoai == '' || trangThai == '') {
                mes += 'Không được bỏ trống ';
                if (nhaKhoaHoc == '') { mes += "nhà khoa học, " }
                if (linhVuc == '') { mes += "lĩnh vực, " }
                if (xepLoai == '') { mes += "xếp loại, " }
                if (trangThai == '') { mes += "trạng thái." }
                alert(mes)  //In ra thong bao nhap thieu
            } else {                
                var submit = document.getElementById('submit');
                submit.setAttribute("type", "submit");
                submit.onclick();
            }      
        }
    </script>
}  